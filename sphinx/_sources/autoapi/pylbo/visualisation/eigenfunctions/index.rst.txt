:py:mod:`pylbo.visualisation.eigenfunctions`
============================================

.. py:module:: pylbo.visualisation.eigenfunctions

.. autoapi-nested-parse::

   
   ..
       !! processed by numpydoc !!


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pylbo.visualisation.eigenfunctions.EigenfunctionHandler




.. py:class:: EigenfunctionHandler(data, ef_ax, spec_ax)

   Bases: :py:obj:`pylbo.visualisation.eigenfunction_interface.EigenfunctionInterface`

   
   Main handler for eigenfunctions.
















   ..
       !! processed by numpydoc !!
   .. py:method:: _check_data_is_present(self)

      
















      ..
          !! processed by numpydoc !!

   .. py:method:: update_plot(self)

      
















      ..
          !! processed by numpydoc !!

   .. py:method:: _get_title(self, ef_name)

      
      Creates the title of the eigenfunction plot.
      If the eigenfunction is retransformed an 'r' is prepended if appropriate,
      along with Re/Im depending on the real/imaginary part shown.
      Additionally, LaTeX formatting is used and numbers are replaced with the
      corresponding suffix: :math:`(1, 2, 3)`
      becomes :math:`(x, y, z)` or :math:`(r, \theta, z)`.

      :param ef_name: The name of the eigenfunction as present in the datfile.
      :type ef_name: str

      :returns: **name** -- The 'new' name for the eigenfunction, used as title.
      :rtype: str















      ..
          !! processed by numpydoc !!

   .. py:method:: _mark_points_without_data_written(self)

      
















      ..
          !! processed by numpydoc !!


